# Import required libraries for file processing and web interface
import pandas as pd  # For reading and manipulating CSV data
import streamlit as st  # For displaying error messages and controlling app flow


# Function to read and validate CSV files uploaded by users
def read_and_validate_csv(uploaded_file):
	# Step 1: Attempt to read the uploaded CSV file
	try:
		# Use pandas to read the CSV file into a DataFrame
		df = pd.read_csv(uploaded_file)
	except Exception as e:
		# If file reading fails, show error and stop execution
		st.error(f"Error reading CSV file: {str(e)}")
		st.stop()  # Halt the Streamlit app execution

	# Step 2: Validate that all required columns are present
	# Define the columns that must exist in the CSV file
	required_columns = ['roll_no', 'name', 'math', 'science', 'english']
	
	# Check which required columns are missing from the uploaded file
	missing_columns = [col for col in required_columns if col not in df.columns]
	
	# If any required columns are missing, show error and stop
	if missing_columns:
		st.error(f"Missing required columns: {', '.join(missing_columns)}")
		st.stop()  # Halt execution to prevent further processing

	# Step 3: Check for empty/null values in required columns
	# Iterate through each required column to check for missing data
	for col in required_columns:
		# Check if any cell in this column is null/empty
		if df[col].isnull().any():
			# If empty values found, show error and stop processing
			st.error(f"Found empty values in column: {col}")
			st.stop()  # Halt execution to prevent invalid data processing

	# Step 4: Return the validated DataFrame if all checks pass
	# At this point, the CSV file has been successfully validated:
	# - File was readable
	# - All required columns are present
	# - No empty values in critical columns
	return df